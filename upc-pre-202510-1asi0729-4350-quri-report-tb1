

![img](https://lh7-rt.googleusercontent.com/docsz/AD_4nXfX1K0yo4bAGOIBKRuUAeEqilP5F8tYJlkH49HOD3hAcG58Fv4UoPqcjsaAOrN5P3JvG4Pn-bS9vSwP1RpcMh8JDkVEj5Gd0Ve_cLd_vlw5pBx7i6UXLgtksUknmzNWAh_r5Sja?key=wLsuErVgqDz-qczrBI4kMctR)

Universidad Peruana de Ciencias Aplicadas 

Ingeniería de Software

Ciclo: 05

Aplicaciones Open Source

Sección: 4350

Docente: Angel Augusto Velasquez Nuñez

Integrantes: Dante Mateo Aleman Romano, Jonatan Ariel Acuña Corahua, Fabrizio Alessandro Contreras Peralta, Renzo Andres Luque Minaya

TB2

Startup: Quri

TeeLab

Junio 2025



# Registro de versiones

| Versión | Fecha      | Autor                                                        | Descripción de modificación                                  |
| ------- | ---------- | ------------------------------------------------------------ | ------------------------------------------------------------ |
| 0.0.1   | 31/03/2025 | Curipaco Neil                                                | Durante el inicio del proyecto, Neil Curipaco Huayllani participó activamente en la elaboración del perfil de la startup y la documentación inicial del equipo. En el marco del Sprint 0, desarrollado el 31 de marzo de 2025, Neil asumió la responsabilidad de estructurar y redactar los apartados correspondientes a la descripción general de la startup, incluyendo la misión, visión y propuesta de valor de TeeLab. Asimismo, contribuyó en la sección de Perfiles de los integrantes, registrando adecuadamente la información académica y motivacional de los miembros del equipo, incluyendo la suya. Este trabajo fue realizado mediante sesiones colaborativas y edición conjunta de documentos en línea, garantizando la coherencia narrativa y técnica de la información. Su intervención fue fundamental para consolidar una presentación clara y convincente de la identidad del proyecto, elemento clave para la planificación y alineación estratégica del equipo de desarrollo desde las primeras etapas. |
| 0.0.2   | 1/04/2025  | Mateo Alemán                                                 | Se redactaron y reorganizaron los antecedentes y la problemática utilizando la técnica 5W2H, eliminando contenido redundante para mejorar la claridad. Se corrigió el Lean UX Problem Statement para alinearlo con los hallazgos obtenidos. Se depuraron y clasificaron los Lean UX Assumptions en cinco categorías clave, descartando supuestos ambiguos. Finalmente, se completó y estructuró el Lean UX Canvas, asegurando coherencia entre problema, usuario, hipótesis y objetivos del negocio. |
| 0.0.3   | 5/04-2025  | Jonatan Acuña                                                | Se identificaron, analizaron y documentaron tres segmentos objetivo: diseñadores gráficos independientes, clientes individuales creativos y marcas/emprendedores. Se utilizó una estructura basada en criterios demográficos, geográficos, psicográficos y conductuales. A partir de entrevistas previas y datos del needfinding, se detallaron motivaciones, frustraciones y preferencias tecnológicas de cada grupo. Esta información permitió definir una propuesta de valor diferenciada, priorizar funcionalidades y orientar el diseño centrado en el usuario. |
| 0.1.1   | 7/04/2025  | Renzo Luque                                                  | Se realizó el análisis del entorno competitivo identificando a Custom Ink, Spreadshirt y Rafasshop como principales referentes. Se construyó una matriz comparativa evaluando propuesta de valor, precios, distribución, herramientas de diseño y marketing. Se elaboró un análisis FODA individual por competidor y, a partir de los hallazgos, se definieron estrategias y tácticas diferenciadoras enfocadas en democratizar el diseño, reducir comisiones y dar mayor visibilidad a diseñadores independientes. Este trabajo sirvió como base estratégica para el posicionamiento de TeeLab. |
| 0.1.2   | 8/04/2025  | Curipaco Neil                                                | Se diseñaron formularios de entrevista diferenciados por segmento (diseñadores, clientes individuales y marcas/emprendedores), priorizando preguntas abiertas para obtener información contextual. Se coordinó y documentó el registro audiovisual de las entrevistas, enfocándose en motivaciones, frustraciones, herramientas y canales utilizados por los usuarios. A partir de los datos recolectados, se realizó un análisis cualitativo y cuantitativo para identificar patrones de comportamiento y necesidades específicas. Esta información permitió construir artefactos centrados en el usuario como User Personas, Empathy Maps y User Task Matrices. |
| 0.1.3   | 10/04/2025 | Fabrizio Contreras                                           | Se sistematizaron y analizaron los hallazgos de las entrevistas mediante técnicas de diseño centrado en el usuario. Se desarrollaron User Personas para los tres segmentos, integrando datos demográficos, motivaciones y frustraciones. Se construyó el User Task Matrix priorizando tareas clave según su frecuencia e impacto. Se elaboraron mapas de experiencia (User Journey Mapping) y de empatía (Empathy Mapping), registrando emociones y acciones del usuario. Finalmente, se completó el As-is Scenario Mapping en Miro, visualizando el flujo actual y puntos de fricción. Esta base permitió orientar mejoras funcionales y de experiencia. |
| 0.1.4   | 13/04/2025 | Mateo Alemán                                                 | Se definió el Ubiquitous Language del proyecto mediante la identificación y documentación de términos clave del dominio de personalización de camisetas. Se elaboró un glosario con definiciones funcionales para roles, acciones y objetos como "Blueprint Designer", "Design Lab" y "Designed Garment". Se normalizó la terminología para asegurar coherencia entre diseño, modelado de software e implementación. Esta base común permitió alinear la comunicación del equipo y estructurar funcionalidades con consistencia semántica. |
| 0.2.0   | 16/04/2025 | Jonatan AcuñaRenzo LuqueCuripaco NeilFabrizio ContrerasMateo Alemán | Se desarrolló el Capítulo III: Requirements Specification de forma colaborativa. Se estructuró el To-Be Scenario Mapping para definir la experiencia futura ideal del usuario. Se redactaron User Stories en formato Gherkin, asegurando trazabilidad y claridad funcional. Se construyó el Impact Mapping, relacionando metas de negocio con funcionalidades clave. Se validaron y priorizaron historias de usuario, y se consolidó el Product Backlog organizando las historias por épicas, capas de arquitectura y tipo de usuario. Este trabajo permitió formalizar los requisitos y preparar la planificación de los próximos sprints. |
| 0.3.0   | 18/04      | Fabrizio Contreras                                           | Style Guidelines, General Style Guidelines, Web Style Guidelines |
| 0.3.1   | 19/04      | Mateo Alemán                                                 | Se definió la arquitectura de información de la plataforma abordando cinco sistemas clave. Se estructuraron los Organization Systems clasificando jerárquicamente módulos como catálogo, laboratorio de diseño e historial. Se estandarizaron los Labeling Systems corrigiendo etiquetas y textos para alinearlos con el Ubiquitous Language. Se añadieron SEO Tags y Meta Tags para mejorar la indexación en buscadores. Se diseñaron los Searching Systems incluyendo filtros y criterios semánticos, y se definieron los Navigation Systems para optimizar la experiencia de navegación. Estas modificaciones mejoraron la usabilidad, el acceso a la información y la escalabilidad del sistema. |
| 0.3.2   | 19/04      | Fabrizio Contreras                                           | Se definieron los Web Applications Wireframes, trazando las estructuras base de interfaces clave como el Design Lab, la vista de productos y el flujo de checkout, priorizando claridad y simplicidad visual. Se elaboraron los Wireflow Diagrams, representando las transiciones entre pantallas y acciones del usuario dentro del sistema, permitiendo visualizar la lógica de navegación. |
| 0.3.3   | 20/04      | Jonatan AcuñaRenzo LuqueCuripaco NeilFabrizio ContrerasMateo Alemán | Se diseñaron los Mock-ups aplicando las Style Guidelines para representar visualmente los componentes con alta fidelidad, incluyendo botones, formularios y toolbars. Finalmente, se construyeron los User Flow Diagrams, detallando los recorridos de diseñador, cliente y fabricante a través de tareas clave. Este trabajo permitió validar los flujos funcionales y preparar las interfaces para la etapa de prototipado. |
| 0.3.4   | 21/04      | Jonatan Acuña                                                | Se desarrollaron los prototipos interactivos de la aplicación web simulando los flujos principales del usuario. Se definió la arquitectura de software siguiendo el enfoque Domain-Driven Design. Se elaboró el Software Architecture Context Diagram identificando actores externos y sus interacciones con el sistema. Luego, se construyó el Container Diagram especificando los principales contenedores tecnológicos (frontend, backend, base de datos, servicios externos). Finalmente, se diseñaron los Componentes Diagrams detallando la organización interna de cada módulo y sus responsabilidades. Estas definiciones permitieron establecer una base técnica clara y escalable para el desarrollo del sistema. |
| 0.3.5   | 21/04      | Jonatan AcuñaRenzo LuqueCuripaco NeilFabrizio ContrerasMateo Alemán | Se desarrolló el diseño orientado a objetos del sistema, iniciando con la construcción de los Class Diagrams que modelan las entidades principales como Usuario, Producto, Diseño y Pedido, definiendo atributos, relaciones y herencias. Se corrigieron clases redundantes, se ajustaron asociaciones incorrectas y se añadieron clases faltantes según los requerimientos funcionales. Paralelamente, se elaboró el Class Dictionary detallando cada clase, sus atributos y métodos, con descripciones precisas y alineadas con el dominio. Este trabajo permitió formalizar la estructura interna del software y asegurar coherencia entre el modelado conceptual y la implementación. |
| 0.3.6   | 22/04      | Curipaco Neil                                                | Se diseñó la base de datos del sistema, iniciando con la definición de entidades clave como usuarios, productos, diseños, pedidos y fabricantes. Se construyó el Database Diagram, estableciendo relaciones entre tablas mediante claves primarias y foráneas. Se corrigieron inconsistencias en la normalización y se eliminaron atributos redundantes. También se ajustaron los tipos de datos para optimizar el rendimiento y la integridad referencial. Este diseño estructuró la base de datos relacional que sustenta las operaciones centrales de la plataforma. |
| 0.4.0   | 23/04      | Mateo Alemán                                                 | Se configuró el entorno de desarrollo unificado para el equipo, definiendo versiones estables de herramientas, frameworks y gestores de paquetes. Se estableció el control de versiones mediante Git, aplicando la estrategia GitFlow y convenciones de commits con formato semántico. Se documentaron las convenciones de estilo para el código fuente en frontend y backend, asegurando uniformidad en la escritura, estructura y nomenclatura. Además, se configuró el despliegue automático de la landing page y servicios en Vercel y Netlify, vinculando repositorios y variables de entorno. Estas acciones garantizaron una gestión eficiente, coherente y automatizada del ciclo de desarrollo y despliegue. |